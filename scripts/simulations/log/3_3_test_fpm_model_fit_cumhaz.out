
R version 4.3.2 (2023-10-31 ucrt) -- "Eye Holes"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: x86_64-w64-mingw32/x64 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

- Project 'K:/Lymphomabase/phd_studies_joshua/Study3/programme_and_log_files' loaded. [renv 1.0.7]
[Previously saved workspace restored]

> ################################################################################
> # Project: Parametic Estimation of The Mean Number of Events
> # 
> # Title: Estimate Lambda(t) in all scenarios
> # 
> # Author: Joshua Entrop
> #
> # Creates: ./data/sim_iterations/cum_haz/sim<1-10>/iteration<n>.csv
> # 
> ################################################################################
> 
> # Prefix -----------------------------------------------------------------------
> 
> # 1. Run Simulations -----------------------------------------------------------
> lapply(1:10, function(i) {
+   
+   box::use(usr = scripts/user_functions,
+            surv = survival[Surv, frailty],
+            rstpm2[...],
+            dt  = data.table)
+   
+   # Load data (drop death times)
+   sim_data <- dt$fread(paste0("./data/sim_data/sim", i, ".csv"))[re == 1]
+   
+   # Obtain benchmark estimates
+   usr$test_cum_haz_model(sim_data,
+                          path_sim_iterations = paste0("./data/sim_iterations",
+                                                       "/cum_haz/sim", i, "/"),
+                          arg_stpm2 = list(
+                            formula = Surv(start, stop, 
+                                           status, type = 'counting') ~ x,
+                            dfs_bh = 1:3
+                          ),
+                          cluster_var = "id",
+                          times = c(2.5, 5.0, 10),
+                          n_cluster = 10,
+                          n_bootstrapps = 1900,
+                          size_bootstrapp = 1000,
+                          ci_fit = TRUE)
+   
+   # Success
+   return(1)
+   
+ })
[[1]]
[1] 1

[[2]]
[1] 1

[[3]]
[1] 1

[[4]]
[1] 1

[[5]]
[1] 1

[[6]]
[1] 1

[[7]]
[1] 1

[[8]]
[1] 1

[[9]]
[1] 1

[[10]]
[1] 1

> 
> ################################################################################
> # END OF R-FILE
> 
> proc.time()
   user  system elapsed 
  95.20  140.79 3321.84 
